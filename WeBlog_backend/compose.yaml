# ======================================
# Docker Compose - Local Development Environment
# ======================================
# This configuration is optimized for local development
# Uses environment variables for configuration
# Production deployment uses different configuration

services:
  # ======================================
  # Main Spring Boot Application
  # ======================================
  weblog-app:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile.dev}
    ports:
      - "${SERVER_PORT:-8080}:8080"
      - "${LIVERELOAD_PORT:-35729}:35729"
    depends_on:
      - postgres
    volumes:
      # Source code hot reload
      - ./:/app
      # Gradle cache persistence (bind to project .gradle-cache for stable permissions)
      - ./.gradle-cache:/root/.gradle
    environment:
      # ======================================
      # Environment Profile
      # ======================================
      - ENV=${ENV:-local}

      # ======================================
      # Database Configuration
      # ======================================
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-weblog}
      - DB_USERNAME=${DB_USERNAME:-weblog}
      - DB_PASSWORD=${DB_PASSWORD:-password}

      # ======================================
      # Application Configuration
      # ======================================
      - SERVER_PORT=8080
      - INIT_MODE=${INIT_MODE:-always}
      - DDL_AUTO=${DDL_AUTO:-update}

      # ======================================
      # Development Settings
      # ======================================
      - DEVTOOLS_ENABLED=${DEVTOOLS_ENABLED:-true}
      - LIVERELOAD_ENABLED=${LIVERELOAD_ENABLED:-true}
      - SHOW_SQL=${SHOW_SQL:-true}
      - FORMAT_SQL=${FORMAT_SQL:-true}

      # ======================================
      # Logging Configuration
      # ======================================
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - APP_LOG_LEVEL=${APP_LOG_LEVEL:-DEBUG}
      - WEB_LOG_LEVEL=${WEB_LOG_LEVEL:-DEBUG}
      - SQL_LOG_LEVEL=${SQL_LOG_LEVEL:-DEBUG}

      # ======================================
      # Security Configuration
      # ======================================
      - JWT_SECRET=${JWT_SECRET:-weblog-dev-secret-key-256-bits-for-hmac-sha-algorithm-secure-enough-default-value}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:5173}

      # ======================================
      # Feature Flags
      # ======================================
      - DOCKER_COMPOSE_ENABLED=false

      # ======================================
      # Java Options
      # ======================================
      - JAVA_OPTS=-Dspring.devtools.restart.poll-interval=1000 -Dspring.devtools.restart.quiet-period=400

    command: ["./gradlew", "bootRun", "--continuous", "--no-daemon", "--info"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ======================================
  # PostgreSQL Database
  # ======================================
  postgres:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-weblog}
      - POSTGRES_USER=${DB_USERNAME:-weblog}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - "${DB_EXTERNAL_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME:-weblog} -d ${DB_NAME:-weblog}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # ======================================
  # pgAdmin - Database Management UI
  # ======================================
  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION:-latest}
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@weblog.dev}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    profiles:
      - tools # Optional service, start with: docker-compose --profile tools up

  # ======================================
  # Redis (Optional - For Production Features)
  # ======================================
  redis:
    image: redis:${REDIS_VERSION:-7}-alpine
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    ports:
      - "${REDIS_EXTERNAL_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - redis # Optional service, start with: docker-compose --profile redis up
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

# ======================================
# Named Volumes
# ======================================
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

# ======================================
# Local Development Environment Configuration
# ======================================
# This profile is activated when ENV=local (default)
# Optimized for fast development with hot reload

# ======================================
# Data Initialization & Persistence
# ======================================
# üîÑ Development: Use Hibernate to manage schema, disable Flyway
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=never

# üö´ Disable Flyway in dev (avoid conflict with Hibernate)
spring.flyway.enabled=false

# üóÉÔ∏è Optional: To clear DB, use create-drop
# spring.jpa.hibernate.ddl-auto=create-drop

# ======================================
# JPA Configuration (Dev Optimized)
# ======================================
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# üöÄ Dev performance tuning
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.connection.autocommit=false

# ======================================
# Development Tools (Hot Reload Optimized)
# ======================================
# üî• Hot reload config
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.poll-interval=1000
spring.devtools.restart.quiet-period=400

# üéØ Watch file changes
spring.devtools.restart.additional-paths=src/main/java,src/main/resources
spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**

# üê≥ Docker env optimization
spring.devtools.remote.secret=weblog-dev-secret
spring.devtools.restart.trigger-file=.reloadtrigger

# ======================================
# Server Configuration (Dev Optimized)
# ======================================
# üì° Dev server config
server.port=8080
server.servlet.context-path=
server.compression.enabled=false
server.error.include-stacktrace=always
server.error.include-message=always

# ======================================
# Logging Configuration (Dev Verbose)
# ======================================
logging.level.root=INFO
logging.level.io.github.mx0100.weblog=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.boot.devtools=DEBUG

# üìù Console log format
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

# ======================================
# Actuator Configuration (Dev All Open)
# ======================================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.mail.enabled=false
management.endpoint.restart.enabled=true

# ======================================
# Database Connection (Dev Optimized)
# ======================================
# üîó Connection pool config (smaller for dev)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=20000

# ======================================
# CORS Configuration (Dev Permissive)
# ======================================
cors.allowed-origins=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,http://localhost:8080
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
cors.allowed-headers=*
cors.allow-credentials=true
cors.max-age=3600

# ======================================
# Cache Configuration (Dev Simplified)
# ======================================
spring.cache.type=simple

# ======================================
# Docker Compose Integration
# ======================================
spring.docker.compose.enabled=false 
# ======================================
# Staging Environment Configuration
# ======================================
# This profile simulates production environment for testing
# Used for pre-production validation and integration testing

# ======================================
# API Configuration
# ======================================
server.servlet.context-path=/api
server.port=8080
server.compression.enabled=true

# ======================================
# Database Management (生产模式)
# ======================================
# 🔒 使用Flyway管理数据库迁移
spring.jpa.hibernate.ddl-auto=validate
spring.sql.init.mode=never

# 🔄 Flyway 配置
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.table=schema_version

# 📊 数据库配置
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ======================================
# Development Tools (禁用)
# ======================================
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false
spring.devtools.add-properties=false

# ======================================
# Logging Configuration (测试环境)
# ======================================
logging.level.root=INFO
logging.level.io.github.mx0100.weblog=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.flywaydb=INFO

# 📝 日志文件配置
logging.file.name=logs/staging-application.log
logging.file.max-size=50MB
logging.file.max-history=7

# ======================================
# Security Configuration (测试级)
# ======================================
server.error.include-stacktrace=on-param
server.error.include-message=on-param

# ======================================
# Performance Configuration
# ======================================
# 🚀 连接池配置
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.connection-timeout=20000

# 📈 JPA 性能配置
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ======================================
# Monitoring & Health (测试环境)
# ======================================
management.endpoints.web.exposure.include=health,info,metrics,flyway
management.endpoint.health.show-details=when-authorized
management.health.mail.enabled=false
management.health.diskspace.enabled=true
management.health.db.enabled=true

# ======================================
# Cache Configuration (Redis测试)
# ======================================
spring.cache.type=redis
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8

# ======================================
# CORS Configuration (测试限制)
# ======================================
cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,https://staging.your-domain.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type,X-Requested-With
cors.allow-credentials=true
cors.max-age=3600

# ======================================
# Test Data Configuration
# ======================================
# 🧪 允许测试数据创建（仅测试环境）
app.test-data.enabled=${ENABLE_TEST_DATA:false}
app.test-data.cleanup-on-startup=${CLEANUP_TEST_DATA:false} 
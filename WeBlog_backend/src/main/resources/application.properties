# ======================================
# WeBlog Application Configuration
# ======================================
# This configuration uses environment variables for all external dependencies
# Default values are optimized for local development with Docker Compose
# Production deployment requires explicit environment variable configuration

spring.application.name=WeBlog

# ======================================
# Environment Profile Configuration
# ======================================
# Auto-detects environment based on ENV variable
# Local: ENV=local (default) | Production: ENV=production
spring.profiles.active=${ENV:local}

# ======================================
# Server Configuration
# ======================================
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:}

# ======================================
# Database Configuration
# ======================================
# Local: Uses Docker Compose postgres service
# Production: Uses AWS RDS endpoint
spring.datasource.url=jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:weblog}
spring.datasource.username=${DB_USERNAME:weblog}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:2}
spring.datasource.hikari.connection-timeout=${DB_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ======================================
# JPA/Hibernate Configuration
# ======================================
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:false}
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ======================================
# Data Initialization
# ======================================
# Only run data.sql in local development
spring.sql.init.mode=${INIT_MODE:never}
spring.sql.init.continue-on-error=false

# ======================================
# Redis Configuration (Optional)
# ======================================
# Enable Redis for session storage in production
spring.data.redis.host=${REDIS_HOST:redis}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.timeout=2000ms
spring.data.redis.password=${REDIS_PASSWORD:}

# ======================================
# Mail Configuration - DISABLED
# ======================================
# Mail functionality disabled to avoid connection errors in production
# spring.mail.host=${MAIL_HOST:smtp.gmail.com}
# spring.mail.port=${MAIL_PORT:587}
# spring.mail.username=${MAIL_USERNAME:}
# spring.mail.password=${MAIL_PASSWORD:}
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true
management.health.mail.enabled=false

# ======================================
# Security Configuration
# ======================================
# JWT configuration
jwt.secret=${JWT_SECRET:weblog-dev-secret-key-256-bits-for-hmac-sha-algorithm-secure-enough-default-value}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS configuration
cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:5173}
cors.allowed-methods=${CORS_METHODS:GET,POST,PUT,DELETE,OPTIONS}

# ======================================
# Logging Configuration
# ======================================
logging.level.root=${LOG_LEVEL:INFO}
logging.level.io.github.mx0100.weblog=${APP_LOG_LEVEL:DEBUG}
logging.level.org.springframework.web=${WEB_LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ======================================
# Development Tools (Auto-disabled in production)
# ======================================
spring.devtools.restart.enabled=${DEVTOOLS_ENABLED:true}
spring.devtools.livereload.enabled=${LIVERELOAD_ENABLED:true}
spring.devtools.restart.poll-interval=1000
spring.devtools.restart.quiet-period=400

# ======================================
# Actuator/Health Checks
# ======================================
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info}
management.endpoint.health.show-details=${HEALTH_DETAILS:when-authorized}
management.health.db.enabled=true

# ======================================
# File Upload Configuration
# ======================================
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# ======================================
# AWS Configuration (Production Only)
# ======================================
# S3 configuration for file storage
aws.s3.bucket=${S3_BUCKET:}
aws.s3.region=${AWS_REGION:us-east-1}
aws.s3.access-key=${AWS_ACCESS_KEY:}
aws.s3.secret-key=${AWS_SECRET_KEY:}

# CloudFront configuration
aws.cloudfront.domain=${CLOUDFRONT_DOMAIN:}

# ======================================
# Docker Compose Integration
# ======================================
# Disable auto-discovery in production
spring.docker.compose.enabled=${DOCKER_COMPOSE_ENABLED:false}

# ======================================
# Production Environment Configuration
# ======================================
# This profile is activated when ENV=production

# ======================================
# API路径前缀 - 与CloudFront配置匹配
# ======================================
server.servlet.context-path=/api

# ======================================
# Database Management (生产级)
# ======================================
# 🔒 安全模式：只验证表结构，不允许自动修改
spring.jpa.hibernate.ddl-auto=validate
spring.sql.init.mode=never

# 📊 生产级数据库配置
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# 🔄 Flyway 数据库迁移管理
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.table=schema_version
spring.flyway.baseline-version=1
spring.flyway.baseline-description=Initial baseline

# ======================================
# Development Tools (生产环境禁用)
# ======================================
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false
spring.devtools.add-properties=false

# ======================================
# Logging Configuration (生产级)
# ======================================
logging.level.root=WARN
logging.level.io.github.mx0100.weblog=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.flywaydb=INFO

# 📝 日志文件配置
logging.file.name=/var/log/weblog/application.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.logback.rollingpolicy.total-size-cap=10GB

# ======================================
# Security Configuration (生产级)
# ======================================
# 🔐 安全头设置
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# ======================================
# Performance Configuration (生产级)
# ======================================
# 🚀 连接池优化
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000

# 📈 JPA 性能优化
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# ======================================
# Monitoring & Health (生产级)
# ======================================
# 📊 Actuator 配置
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.health.mail.enabled=false
management.health.diskspace.enabled=true
management.health.db.enabled=true

# 🔧 应用信息
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

# ======================================
# Cache Configuration (生产级)
# ======================================
spring.cache.type=redis
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# ======================================
# CORS Configuration (生产级限制)
# ======================================
# 🔒 限制跨域访问
cors.allowed-origins=${CORS_ORIGINS:https://your-domain.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type,X-Requested-With
cors.allow-credentials=true
cors.max-age=3600 